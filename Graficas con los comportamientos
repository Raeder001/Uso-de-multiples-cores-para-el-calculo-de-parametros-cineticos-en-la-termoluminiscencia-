import numpy as np
import sympy as sp
from tabulate import tabulate
import matplotlib.pyplot as plt
import pandas as pd
import time



# Lista de temperaturas
temperaturas_kelvin = np.array([325.15, 326.15, 328.15, 330.15, 332.15, 334.15, 336.15, 337.15, 339.15, 341.15,
               343.15, 345.15, 347.15, 349.15, 351.15, 353.15, 355.15, 356.15, 358.15, 360.15,
               362.15, 364.15, 366.15, 368.15, 370.15, 372.15, 374.15, 376.15, 378.15, 380.15,
               381.15, 383.15, 385.15, 387.15, 389.15, 391.15, 393.15, 395.15, 397.15, 399.15,
               401.15, 403.15, 405.15, 407.15, 409.15, 410.15, 412.15, 414.15, 416.15, 418.15,
               419.15, 422.15, 423.15, 425.15, 428.15, 429.15, 431.15, 433.15, 435.15, 437.15,
               439.15, 441.15, 442.15, 445.15, 446.15, 449.15, 450.15, 452.15, 454.15, 456.15,
               458.15, 460.15, 462.15, 464.15, 466.15, 468.15, 470.15, 471.15, 474.15, 475.15,
               477.15, 479.15, 481.15, 483.15, 485.15, 487.15, 489.15, 491.15, 493.15, 495.15,
               497.15, 499.15, 501.15, 502.15, 504.15, 506.15, 508.15, 510.15, 512.15, 514.15,
               515.15, 517.15, 519.15, 521.15, 523.15, 525.15, 527.15, 529.15, 531.15, 533.15,
               535.15, 537.15, 539.15, 540.15, 543.15, 544.15, 546.15, 548.15, 550.15, 552.15,
               554.15, 556.15, 558.15, 560.15, 562.15, 563.15, 565.15, 567.15, 569.15, 571.15,
               573.15, 575.15, 577.15, 579.15, 581.15, 583.15, 585.15, 586.15, 588.15, 590.15,
               592.15, 594.15, 596.15, 598.15, 600.15, 602.15, 604.15, 606.15, 607.15, 609.15,
               611.15, 613.15, 615.15, 617.15, 619.15, 621.15, 623.15, 625.15, 627.15, 628.15,
               630.15, 632.15, 634.15, 636.15, 638.15, 640.15, 642.15, 644.15, 646.15, 648.15,
               649.15, 651.15, 653.15, 655.15, 657.15, 659.15, 661.15, 663.15, 665.15, 667.15,
               669.15, 670.15, 672.15])



# Lista de intensidades de TL
intensidades = np.array([139, 154, 197, 238, 136, 135, 252, 231, 217, 377, 528, 362, 447, 619, 535, 548,
              766, 831, 953, 963, 1159, 1533, 1814, 2134, 2443, 2547, 3076, 3683, 3721, 4496,
              5111, 5917, 6490, 7112, 8133, 8805, 10515, 10697, 11648, 12960, 14205, 15081,
              16561, 18610, 21543, 24363, 26022, 29042, 33668, 37654, 42083, 48063, 53994,
              60113, 65625, 72405, 80825, 86091, 91431, 100505, 106245, 110940, 116491, 119494,
              123741, 120026, 122565, 120028, 116314, 108888, 104407, 96170, 87742, 78936,
              72285, 61418, 56431, 47622, 41652, 35764, 31051, 26433, 23081, 20467, 18270,
              16286, 16352, 15799, 14964, 14726, 15321, 14860, 16130, 17154, 16369, 17303,
              16763, 17994, 18353, 20763, 20587, 22631, 23584, 26372, 28109, 30326, 33577,
              34900, 37626, 39548, 41638, 46430, 46160, 49938, 52112, 55097, 57206, 58326,
              61385, 61309, 61734, 62963, 60254, 60869, 60305, 59433, 56164, 54024, 52733,
              49544, 47672, 45909, 43697, 38772, 36228, 35328, 33176, 30326, 28288, 25902,
              23987, 22327, 21709, 21649, 19825, 20329, 20670, 21537, 20876, 22702, 23296,
              23713, 24404, 24422, 26156, 27100, 28763, 28410, 29014, 29421, 28072, 29067,
              29631, 28283, 27975, 27474, 27505, 26375, 25620, 24620, 22114, 22623, 21004,
              21185, 21637, 19361, 18227, 17851, 18691, 17465, 18265, 17979, 15967])

#funcion de ajuste 
def Intensity(E_a,b,Im,Tm,T):

    return  (Im*b**(b/(b-1)))*np.exp((E_a*(T-Tm))/(k*T*Tm))*(1+(b-1)*((2*k*Tm)/E_a)+(b-1)*(1-(2*k*T)/E_a)*((T**2/Tm**2)*np.exp((E_a*(T-Tm))/(k*T*Tm))))**(-b/(b-1))

#Im es la intensidad maxima, Tm en la temperatura a la que se alcanza Im, ambos dato son experimentales 


#Calculo del area
def area_trapecios(x, y):
    #x = sp.Symbol('x') 
    area = 0
    for i in range(len(x) - 1):
        area += (y[i] + y[i + 1]) * (x[i + 1] - x[i]) / 2
    return area

seleccion1_t = temperaturas_kelvin[45:83]
seleccion1_I = intensidades[45:83]
seleccion2_t = temperaturas_kelvin[105:140]
seleccion2_I = intensidades[105:140]
seleccion3_t = temperaturas_kelvin[150:173]
seleccion3_I = intensidades[150:173]

# Crear la figura
fig, ax= plt.subplots()

# Graficar los puntos experimentales 
ax.scatter(temperaturas_kelvin, intensidades, s=7)

# Agregar etiquetas a los ejes
ax.set_xlabel('Temperatura (K)')
ax.set_ylabel('Intensidad de TL (a.u.)')
plt.title('Intensidad de TL vs Temperatura')

# Mostrar la gráfica
plt.show()

fig, ax= plt.subplots()
ax.scatter(temperaturas_kelvin, intensidades, s=7)
ax.scatter(seleccion1_t, seleccion1_I, s=7,label='Porcion 1 seleccionada')
ax.scatter(seleccion2_t, seleccion2_I, s=7,label='Porcion 2 seleccionada',c='r')
ax.scatter(seleccion3_t, seleccion3_I, s=7,label='Porcion 3 seleccionada',c='k')



# Agregar etiquetas a los ejes
ax.set_xlabel('Temperatura (K)')
ax.set_ylabel('Intensidad de TL (a.u.)')

# Agregar un título a la gráfica
plt.title('Intensidad de TL vs Temperatura')
plt.legend()
# Mostrar la gráfica
plt.show()

# Crear la figura
fig, ax = plt.subplots()

# Graficar los puntos

ax.plot(seleccion1_t, seleccion1_I, 'gray', lw=0.8)
ax.scatter(seleccion1_t, seleccion1_I, color='orange',label='Datos experimentales',s=10,zorder=2)


for temp, intens in zip(seleccion1_t, seleccion1_I):
    plt.plot([temp, temp], [0, intens], color='gray', linewidth=0.8)
    
plt.ylim(0, 130000)
# Agregar etiquetas a los ejes
ax.set_xlabel('Temperatura (K)')
ax.set_ylabel('Intensidad de TL (a.u.)')

# Agregar un título a la gráfica
plt.title('Porcion 1 seleccionada')

# Mostrar la gráfica
plt.show()

# Crear la figura
fig, ax = plt.subplots()

# Graficar los puntos

ax.plot(seleccion2_t, seleccion2_I, 'gray', lw=0.8)
ax.scatter(seleccion2_t, seleccion2_I, color='r',label='Datos experimentales',s=10,zorder=2)


for temp, intens in zip(seleccion2_t, seleccion2_I):
    plt.plot([temp, temp], [0, intens], color='gray', linewidth=0.8)
    
plt.ylim(0, 130000)
# Agregar etiquetas a los ejes
ax.set_xlabel('Temperatura (K)')
ax.set_ylabel('Intensidad de TL (a.u.)')

# Agregar un título a la gráfica
plt.title('Porcion 2 seleccionada')

# Mostrar la gráfica
plt.show()

# Crear la figura
fig, ax = plt.subplots()

# Graficar los puntos

ax.plot(seleccion3_t, seleccion3_I, 'gray', lw=0.8)
ax.scatter(seleccion3_t, seleccion3_I, color='k',label='Datos experimentales',s=10,zorder=2)


for temp, intens in zip(seleccion3_t, seleccion3_I):
    plt.plot([temp, temp], [0, intens], color='gray', linewidth=0.8)
    
plt.ylim(0, 130000)
# Agregar etiquetas a los ejes
ax.set_xlabel('Temperatura (K)')
ax.set_ylabel('Intensidad de TL (a.u.)')

# Agregar un título a la gráfica
plt.title('Porcion 3 seleccionada')

# Mostrar la gráfica
plt.show()

#valores de areas
areat = area_trapecios(temperaturas_kelvin, intensidades)
area1 = area_trapecios(seleccion1_t, seleccion1_I)
area2 = area_trapecios(seleccion2_t, seleccion2_I)
area3 = area_trapecios(seleccion3_t, seleccion3_I)

print(f"Área bajo la curva 1: {areat}")
print(f"Área bajo la curva de la Porción 1 selecionada: {area1}")
print(f"Área bajo la curva de la Porción 2 selecionada: {area2}")
print(f"Área bajo la curva de la Porción 3 selecionada: {area3}")

# Mostrar las regiones seleccionas para MC estratificado
plt.show()

fig, ax= plt.subplots()

ax.plot(seleccion1_t, seleccion1_I,lw=1,color='orange')
plt.ylim(0, 130000)

# Agregar etiquetas a los ejes
ax.set_xlabel('Temperatura (K)')
ax.set_ylabel('Intensidad de TL (a.u.)')

# Agregar un título a la gráfica
plt.title('Intensidad de TL vs Temperatura')
plt.axvline(410.15, color='black', linewidth=1, linestyle='--')
plt.axvline(435.15, color='black', linewidth=1, linestyle='--')
plt.axvline(460.15, color='black', linewidth=1, linestyle='--')
plt.axvline(481.15, color='black', linewidth=1, linestyle='--')
# Mostrar la gráfica
plt.show()

plt.show()

fig, ax= plt.subplots()

ax.plot(seleccion2_t, seleccion2_I,lw=1,color='red')
plt.ylim(0, 130000)

# Agregar etiquetas a los ejes
ax.set_xlabel('Temperatura (K)')
ax.set_ylabel('Intensidad de TL (a.u.)')

# Agregar un título a la gráfica
plt.title('Intensidad de TL vs Temperatura')
plt.axvline(525.15, color='black', linewidth=1, linestyle='--')
plt.axvline(548.15, color='black', linewidth=1, linestyle='--')
plt.axvline(567.15, color='black', linewidth=1, linestyle='--')
plt.axvline(590.15, color='black', linewidth=1, linestyle='--')
# Mostrar la gráfica
plt.show()

plt.show()

fig, ax= plt.subplots()

ax.plot(seleccion3_t, seleccion3_I,lw=1,color='black')
plt.ylim(0, 130000)

# Agregar etiquetas a los ejes
ax.set_xlabel('Temperatura (K)')
ax.set_ylabel('Intensidad de TL (a.u.)')

# Agregar un título a la gráfica
plt.title('Intensidad de TL vs Temperatura')
plt.axvline(611.15, color='black', linewidth=1, linestyle='--')
plt.axvline(625.15, color='black', linewidth=1, linestyle='--')
plt.axvline(638.15, color='black', linewidth=1, linestyle='--')
plt.axvline(653.15, color='black', linewidth=1, linestyle='--')
# Mostrar la gráfica
plt.show()
k = 8.617e-5
Im=seleccion1_I[19]
Tm=seleccion1_t[19]
Im2=seleccion2_I[16]
Tm2=seleccion2_t[16]
Im3=seleccion3_I[12]
Tm3=seleccion3_t[12]

Tm=448.15
l=np.linspace(325.15,672.15,100)
    # Calcular los valores de y
j=Intensity(1.15, 1.44,Im,Tm, l)

    # Graficar la función
plt.plot(l,j,color='orange',label='Ajuste')
plt.scatter(temperaturas_kelvin, intensidades, s=7,label='Experimentales')


    # Agregar título y etiquetas a los ejes
plt.title("Ajuste")

plt.xlabel("Temperatura (K)")
plt.ylabel("Intensidad(u.a)")
plt.legend()



    # Mostrar la gráfica
plt.show()
j1=Intensity(1.30,1.55,Im2,Tm2, l)

    # Graficar la función
plt.plot(l,j,color='orange',label='Ajuste')
plt.plot(l,j1,color='red',label='Ajuste')
plt.scatter(temperaturas_kelvin, intensidades, s=7,label='Experimentales')


    # Agregar título y etiquetas a los ejes
plt.title("Ajuste")

plt.xlabel("Temperatura (K)")
plt.ylabel("Intensidad(u.a)")
plt.legend()



    # Mostrar la gráfica
plt.show()
j2=Intensity(2.00, 1.90,Im3,Tm3, l)

    # Graficar la función
plt.plot(l,j,color='orange',label='Ajuste 1')
plt.plot(l,j1,color='red',label='Ajuste 2')
plt.plot(l,j2,color='k',label='Ajuste 3')
plt.scatter(temperaturas_kelvin, intensidades, s=7,label='Experimentales')


    # Agregar título y etiquetas a los ejes
plt.title("Ajuste")

plt.xlabel("Temperatura (K)")
plt.ylabel("Intensidad(u.a)")
plt.legend()



    # Mostrar la gráfica
plt.show()







